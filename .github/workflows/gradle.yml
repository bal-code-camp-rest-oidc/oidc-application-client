name: Java CI

on: [push]

jobs:
  build-library-inventory-service:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # test against latest update of each major Java version, as well as specific updates of LTS versions:
        java: [ 8 ]
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Build with Gradle
        run: cd spring-application && gradle :library-inventory-service:bootBuildImage && cd ..
      - uses: actions/checkout@v1
      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      - name: Get the version
        id: vars
        run: echo ::set-output name=tag::$(echo ${GITHUB_SHA})
      - name: Tag image
        run: docker image tag luechtdiode/oidc-ws-library-inventory-service:latest luechtdiode/oidc-ws-library-inventory-service:${{steps.vars.outputs.tag}}
      - name: Push the tagged Docker image
        run: docker push luechtdiode/oidc-ws-library-inventory-service:${{steps.vars.outputs.tag}}
      - name: Push the latest Docker image
        run: docker push luechtdiode/oidc-ws-library-inventory-service:latest

#  build-library-borrow-service:
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        # test against latest update of each major Java version, as well as specific updates of LTS versions:
#        java: [ 8 ]
#    steps:
#    - uses: actions/checkout@v1
#    - name: Set up JDK
#      uses: actions/setup-java@v1
#      with:
#        java-version: ${{ matrix.java }}
#    - name: Build with Gradle
#      run: cd spring-application && gradle :library-borrow-service:bootBuildImage && cd ..
#    - uses: actions/checkout@v1
#    - name: Login to DockerHub Registry
#      run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
#    - name: Get the version
#      id: vars
#      run: echo ::set-output name=tag::$(echo ${GITHUB_SHA})
#    - name: Tag image
#      run: docker image tag luechtdiode/oidc-ws-library-borrow-service:latest luechtdiode/oidc-ws-library-borrow-service:${{steps.vars.outputs.tag}}
#    - name: Push the tagged Docker image
#      run: docker push luechtdiode/oidc-ws-library-borrow-service:${{steps.vars.outputs.tag}}
#    - name: Push the latest Docker image
#      run: docker push luechtdiode/oidc-ws-library-borrow-service:latest

  build-library-frontend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # test against latest update of each major Java version, as well as specific updates of LTS versions:
        java: [ 8 ]
    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}
    - name: Build with Gradle
      run: cd spring-application && gradle :library-client:bootBuildImage && cd ..
    - uses: actions/checkout@v1
    - name: Login to DockerHub Registry
      run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
    - name: Get the version
      id: vars
      run: echo ::set-output name=tag::$(echo ${GITHUB_SHA})
    - name: Tag image
      run: docker image tag luechtdiode/oidc-ws-library-frontend:latest luechtdiode/oidc-ws-library-frontend:${{steps.vars.outputs.tag}}
    - name: Push the tagged Docker image
      run: docker push luechtdiode/oidc-ws-library-frontend:${{steps.vars.outputs.tag}}
    - name: Push the latest Docker image
      run: docker push luechtdiode/oidc-ws-library-frontend:latest

  build-library-facade-server:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # test against latest update of each major Java version, as well as specific updates of LTS versions:
        java: [ 8 ]
    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}
    - name: Build with Gradle
      run: cd spring-application && gradle :library-server:bootBuildImage && cd ..
    - uses: actions/checkout@v1
    - name: Login to DockerHub Registry
      run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
    - name: Get the version
      id: vars
      run: echo ::set-output name=tag::$(echo ${GITHUB_SHA})
    - name: Tag image
      run: docker image tag luechtdiode/oidc-ws-library-facade-server:latest luechtdiode/oidc-ws-library-facade-server:${{steps.vars.outputs.tag}}
    - name: Push the tagged Docker image
      run: docker push luechtdiode/oidc-ws-library-facade-server:${{steps.vars.outputs.tag}}
    - name: Push the latest Docker image
      run: docker push luechtdiode/oidc-ws-library-facade-server:latest

  build-library-user-server:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # test against latest update of each major Java version, as well as specific updates of LTS versions:
        java: [ 8 ]
    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}
    - name: Build with Gradle
      run: cd spring-application && gradle :library-user-server:bootBuildImage && cd ..
    - uses: actions/checkout@v1
    - name: Login to DockerHub Registry
      run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
    - name: Get the version
      id: vars
      run: echo ::set-output name=tag::$(echo ${GITHUB_SHA})
    - name: Tag image
      run: docker image tag luechtdiode/oidc-ws-library-user-server:latest luechtdiode/oidc-ws-library-user-server:${{steps.vars.outputs.tag}}
    - name: Push the tagged Docker image
      run: docker push luechtdiode/oidc-ws-library-user-server:${{steps.vars.outputs.tag}}
    - name: Push the latest Docker image
      run: docker push luechtdiode/oidc-ws-library-user-server:latest